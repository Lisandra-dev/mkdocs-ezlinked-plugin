[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mkdocs-obsidian-links"
version = "1.0.0"
description = "A Mkdocs plugin that makes linking to other documents easy."
authors = ["Mara-Li <lili.simonetti@outlook.fr>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
mkdocs = "*"
pygtrie = "*"

[tool.poetry.group.dev.dependencies]
ruff = "*"
watchdog = "^6.0.0"
python-semantic-release = "^9.15.2"
build = "^1.2.2.post1"

[tool.ruff.lint]
select = ["PTH", "ANN", "N", "Q", "PL", "E", "F", "I"]
ignore = ["E501"]
exclude = ["tests", "docs", "build", "dist", "venv", "venv3", "venv3.6", "venv3.7", "venv3.8", "venv3.9", "venv3.10", "__pycache__"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["test.*"]

[tool.poetry.plugins."mkdocs.plugins"]
ezlinks = "mkdocs_obsidian_links.plugin:LinksPlugin"

[tool.poetry-exec-plugin.commands]
test="cd test && mkdocs serve"
watch="poetry run python watch_install.py"
build="python -m build"
ruff="ruff format"
upload="poetry publish --build"
release="poetry run semantic-release publish"

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "{version}"
version_toml = [
    "pyproject.toml:tool.poetry.version",
]
version_variables = [
    "mkdocs_obsidian_links/__init__.py:__version__",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
token = {env= "GH_TOKEN"}
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

